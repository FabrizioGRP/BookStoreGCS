BookStore+
**********
namespace BookStore.Entidades.Core
{
    public class Administrador
    {
        public int Id_Administrador { get; set; }
        public string Nombre { get; set; }
        public string Contraseña { get; set; }
    }
}

namespace BookStore.Entidades.Core
{
    public class Cliente
    {
        public int Id_Cliente { get; set; }
        public string Nombre { get; set; }
        public string Email { get; set; }
        public string Direccion { get; set; }
        public string Telefono { get; set; }
    }
}

namespace BookStore.Entidades.Core
{
    public class Libro
    {
        public int Id_Libro { get; set; }
        public string Titulo { get; set; }
        public string Autor { get; set; }
        public string ISBN { get; set; }
        public decimal Precio { get; set; }
        public int Stock { get; set; }
        public string Categoria { get; set; }
        public string Editorial { get; set; }
    }
}

using System.Data.SqlClient;
using BookStore.Entidades.Core;
using System.Configuration;

namespace BookStore.AccesoDatos.Core
{
    public class AdministradorDA
    {
        private readonly string cadenaConexion = ConfigurationManager.ConnectionStrings["SQL"].ConnectionString;

        public Administrador ValidarAdministrador(string nombre, string contraseña)
        {
            Administrador admin = null;

            using (SqlConnection cn = new SqlConnection(cadenaConexion))
            {
                string query = "SELECT * FROM Administrador WHERE Nombre = @nombre AND Contraseña = @contraseña";
                SqlCommand cmd = new SqlCommand(query, cn);
                cmd.Parameters.AddWithValue("@nombre", nombre);
                cmd.Parameters.AddWithValue("@contraseña", contraseña);

                cn.Open();
                SqlDataReader dr = cmd.ExecuteReader();

                if (dr.Read())
                {
                    admin = new Administrador
                    {
                        Id_Administrador = (int)dr["Id_Administrador"],
                        Nombre = dr["Nombre"].ToString(),
                        Contraseña = dr["Contraseña"].ToString()
                    };
                }
            }

            return admin;
        }
    }
}

using System.Data.SqlClient;
using BookStore.Entidades.Core;
using System.Configuration;

namespace BookStore.AccesoDatos.Core
{
    public class ClienteDA
    {
        private readonly string cadenaConexion = ConfigurationManager.ConnectionStrings["SQL"].ConnectionString;

        public Cliente ValidarCliente(string nombre, string email)
        {
            Cliente cliente = null;

            using (SqlConnection cn = new SqlConnection(cadenaConexion))
            {
                string query = "SELECT * FROM Cliente WHERE Nombre = @nombre AND Email = @correo";
                SqlCommand cmd = new SqlCommand(query, cn);
                cmd.Parameters.AddWithValue("@nombre", nombre);
                cmd.Parameters.AddWithValue("@correo", email);

                cn.Open();
                SqlDataReader dr = cmd.ExecuteReader();

                if (dr.Read())
                {
                    cliente = new Cliente
                    {
                        Id_Cliente = (int)dr["Id_Cliente"],
                        Nombre = dr["Nombre"].ToString(),
                        Email = dr["Email"].ToString(),
                        Direccion = dr["Direccion"] == DBNull.Value ? "" : dr["Direccion"].ToString(),
                        Telefono = dr["Telefono"] == DBNull.Value ? "" : dr["Telefono"].ToString()
                    };
                }
            }

            return cliente;
        }
    }
}

using System.Collections.Generic;
using System.Data.SqlClient;
using BookStore.Entidades.Core;
using System.Configuration;

namespace BookStore.AccesoDatos.Core
{
    public class LibroDA
    {
        private readonly string cadenaConexion = ConfigurationManager.ConnectionStrings["SQL"].ConnectionString;

        public List<Libro> ListarLibros()
        {
            List<Libro> lista = new List<Libro>();

            using (SqlConnection cn = new SqlConnection(cadenaConexion))
            {
                string query = "SELECT * FROM Libro";
                SqlCommand cmd = new SqlCommand(query, cn);
                cn.Open();
                SqlDataReader dr = cmd.ExecuteReader();

                while (dr.Read())
                {
                    lista.Add(new Libro
                    {
                        Id_Libro = (int)dr["Id_Libro"],
                        Titulo = dr["Titulo"].ToString(),
                        Autor = dr["Autor"] == DBNull.Value ? "" : dr["Autor"].ToString(),
                        ISBN = dr["ISBN"] == DBNull.Value ? "" : dr["ISBN"].ToString(),
                        Precio = (decimal)dr["Precio"],
                        Stock = (int)dr["Stock"],
                        Categoria = dr["Categoria"] == DBNull.Value ? "" : dr["Categoria"].ToString(),
                        Editorial = dr["Editorial"] == DBNull.Value ? "" : dr["Editorial"].ToString()
                    });
                }
            }

            return lista;
        }
    }
}

using BookStore.AccesoDatos.Core;
using BookStore.Entidades.Core;

namespace BookStore.LogicaNegocio.Core
{
    public class AdministradorLN
    {
        private readonly AdministradorDA adminDA = new AdministradorDA();

        public Administrador Login(string nombre, string contraseña)
        {
            return adminDA.ValidarAdministrador(nombre, contraseña);
        }
    }
}

using BookStore.AccesoDatos.Core;
using BookStore.Entidades.Core;

namespace BookStore.LogicaNegocio.Core
{
    public class ClienteLN
    {
        private readonly ClienteDA clienteDA = new ClienteDA();

        public Cliente Login(string nombre, string email)
        {
            return clienteDA.ValidarCliente(nombre, email);
        }
    }
}

using System.Collections.Generic;
using BookStore.AccesoDatos.Core;
using BookStore.Entidades.Core;

namespace BookStore.LogicaNegocio.Core
{
    public class LibroLN
    {
        private readonly LibroDA libroDA = new LibroDA();

        public List<Libro> ListarLibros()
        {
            return libroDA.ListarLibros();
        }
    }
}

using System.Web.Mvc;
using BookStore.LogicaNegocio.Core;
using BookStore.Entidades.Core;

namespace BookStore.Cliente.Web.Controllers
{
    public class LoginController : Controller
    {
        private readonly ClienteLN clienteLN = new ClienteLN();
        private readonly AdministradorLN adminLN = new AdministradorLN();

        [HttpGet]
        public ActionResult Index()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Index(string tipo, string nombre, string email, string contraseña)
        {
            if (tipo == "cliente")
            {
                var cliente = clienteLN.Login(nombre, email);
                if (cliente != null)
                    return RedirectToAction("ListaLibros", "Libro");
            }
            else if (tipo == "admin")
            {
                var admin = adminLN.Login(nombre, contraseña);
                if (admin != null)
                    return RedirectToAction("ListaLibros", "Libro");
            }

            ViewBag.Error = "Credenciales incorrectas.";
            return View();
        }
    }
}

using System.Web.Mvc;
using BookStore.LogicaNegocio.Core;

namespace BookStore.Cliente.Web.Controllers
{
    public class LibroController : Controller
    {
        private readonly LibroLN libroLN = new LibroLN();

        public ActionResult ListaLibros()
        {
            var libros = libroLN.ListarLibros();
            return View(libros);
        }
    }
}